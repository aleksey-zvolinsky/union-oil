inherited CreateAZSBookForm: TCreateAZSBookForm
  Left = 518
  Top = 84
  BorderIcons = [biSystemMenu]
  BorderStyle = bsDialog
  Caption = #1040#1074#1090#1086#1079#1072#1087#1086#1083#1085#1077#1085#1080#1077' '#1082#1085#1080#1075#1080' '#1087#1088#1086#1076#1072#1078
  ClientHeight = 272
  ClientWidth = 533
  Font.Height = -10
  OldCreateOrder = True
  Position = poMainFormCenter
  OnShow = FormShow
  PixelsPerInch = 96
  TextHeight = 13
  object pButton: TPanel
    Left = 0
    Top = 236
    Width = 533
    Height = 36
    Align = alBottom
    TabOrder = 1
    DesignSize = (
      533
      36)
    object bbCancel: TBitBtn
      Left = 434
      Top = 6
      Width = 89
      Height = 25
      Anchors = [akTop, akRight]
      BiDiMode = bdLeftToRight
      Caption = '&'#1047#1072#1082#1088#1099#1090#1100
      ParentBiDiMode = False
      TabOrder = 4
      OnClick = bbCancelClick
      Kind = bkCancel
    end
    object bbOk: TBitBtn
      Left = 136
      Top = 6
      Width = 89
      Height = 25
      Caption = #1042#1099#1087#1086#1083#1085#1080#1090#1100
      Default = True
      Enabled = False
      TabOrder = 3
      Visible = False
      OnClick = bbOkClick
      Glyph.Data = {
        DE010000424DDE01000000000000760000002800000024000000120000000100
        0400000000006801000000000000000000001000000010000000000000000000
        80000080000000808000800000008000800080800000C0C0C000808080000000
        FF0000FF000000FFFF00FF000000FF00FF00FFFF0000FFFFFF00333333333333
        3333333333333333333333330000333333333333333333333333F33333333333
        00003333344333333333333333388F3333333333000033334224333333333333
        338338F3333333330000333422224333333333333833338F3333333300003342
        222224333333333383333338F3333333000034222A22224333333338F338F333
        8F33333300003222A3A2224333333338F3838F338F33333300003A2A333A2224
        33333338F83338F338F33333000033A33333A222433333338333338F338F3333
        0000333333333A222433333333333338F338F33300003333333333A222433333
        333333338F338F33000033333333333A222433333333333338F338F300003333
        33333333A222433333333333338F338F00003333333333333A22433333333333
        3338F38F000033333333333333A223333333333333338F830000333333333333
        333A333333333333333338330000333333333333333333333333333333333333
        0000}
      NumGlyphs = 2
    end
    object bNext: TBitBtn
      Left = 136
      Top = 6
      Width = 90
      Height = 25
      Caption = #1044#1072#1083#1077#1077
      Default = True
      TabOrder = 2
      OnClick = bNextClick
      Glyph.Data = {
        76010000424D7601000000000000760000002800000020000000100000000100
        0400000000000001000000000000000000001000000010000000000000000000
        80000080000000808000800000008000800080800000C0C0C000808080000000
        FF0000FF000000FFFF00FF000000FF00FF00FFFF0000FFFFFF00333333333333
        3333333333333333333333333333333333333333333333333333333333333333
        3333333333333333333333333333333333333333333FF3333333333333003333
        3333333333883FF3333333333309003333333333338F883FF333333333099900
        33333FFFFF8F33883FF30000000999990033888888833333883F099999999999
        99008FFFFFFF33333F8800000009999900338888888F333F8833333333099900
        33333333338F3F88333333333309003333333333338F88333333333333003333
        3333333333883333333333333333333333333333333333333333333333333333
        3333333333333333333333333333333333333333333333333333}
      NumGlyphs = 2
    end
    object bPrevious: TBitBtn
      Left = 39
      Top = 6
      Width = 90
      Height = 25
      Caption = #1053#1072#1079#1072#1076
      Enabled = False
      TabOrder = 1
      OnClick = bPreviousClick
      Glyph.Data = {
        76010000424D7601000000000000760000002800000020000000100000000100
        0400000000000001000000000000000000001000000010000000000000000000
        80000080000000808000800000008000800080800000C0C0C000808080000000
        FF0000FF000000FFFF00FF000000FF00FF00FFFF0000FFFFFF00333333333333
        3333333333333333333333333333333333333333333333333333333333333333
        3333333333333FF3333333333333003333333333333F88F33333333333009033
        333333333F8838F333333333009990333333333F883338FFFFFF330099999000
        00003F883333388888880099999999999990883FF33333FFFFF8330099999000
        000033883FF33888888833330099903333333333883FF8F33333333333009033
        33333333338838F3333333333333003333333333333388333333333333333333
        3333333333333333333333333333333333333333333333333333333333333333
        3333333333333333333333333333333333333333333333333333}
      NumGlyphs = 2
    end
    object bDelete: TBitBtn
      Left = 6
      Top = 6
      Width = 25
      Height = 25
      Enabled = False
      TabOrder = 0
      Visible = False
      OnClick = bDeleteClick
      Glyph.Data = {
        76010000424D7601000000000000760000002800000020000000100000000100
        0400000000000001000000000000000000001000000010000000000000000000
        8000008000000080800080000000800080008080000080808000C0C0C0000000
        FF0000FF000000FFFF00FF000000FF00FF00FFFF0000FFFFFF00888888888888
        888888888888888888888000000000000888877777777777788880FFFFFFFFFF
        0888878888888888788880FFFFFFFFFF0888878888888888788880FF00000000
        0088878877777777778880FF09999999908887887FFFFFFFF78880FF09999999
        908887887FFFFFFFF78880FF000000000088878877777777778880FFFFFFFFFF
        0888878888888888788880F0F00F000F0888878787787778788880FFFFFFFFFF
        0888878888888888788880F000F0FFFF0888878777878888788880FFFFFFF000
        0888878888888777788880F000FFF0808888878777888787888880FFFFFFF008
        8888878888888778888880000000008888888777777777888888}
      NumGlyphs = 2
    end
  end
  object Notebook: TNotebook
    Left = 0
    Top = 0
    Width = 533
    Height = 236
    Align = alClient
    TabOrder = 0
    object TPage
      Left = 0
      Top = 0
      Caption = 'Default'
      object pDefault: TPanel
        Left = 0
        Top = 0
        Width = 533
        Height = 236
        Align = alClient
        TabOrder = 0
        object pRekviziti: TPanel
          Left = 1
          Top = 62
          Width = 531
          Height = 173
          Align = alBottom
          BevelInner = bvRaised
          BevelOuter = bvLowered
          TabOrder = 1
          DesignSize = (
            531
            173)
          object lAsz: TLabel
            Left = 9
            Top = 60
            Width = 27
            Height = 13
            Caption = #1040#1047#1057' :'
          end
          object LKlient: TLabel
            Left = 8
            Top = 112
            Width = 32
            Height = 13
            Caption = #1050#1086#1084#1091' :'
          end
          object LFrom: TLabel
            Left = 8
            Top = 7
            Width = 45
            Height = 13
            Caption = #1054#1090' '#1082#1086#1075#1086' :'
          end
          object ChBAZS: TCheckBox
            Left = 52
            Top = 58
            Width = 71
            Height = 17
            BiDiMode = bdLeftToRight
            Caption = #1042#1089#1077' '#1040#1047#1057
            ParentBiDiMode = False
            TabOrder = 1
            OnClick = ChBAZSClick
          end
          object CAZS: TComboEdit
            Left = 8
            Top = 83
            Width = 512
            Height = 21
            GlyphKind = gkDropDown
            Anchors = [akLeft, akTop, akRight]
            NumGlyphs = 1
            TabOrder = 2
            OnButtonClick = CAZSButtonClick
            OnDblClick = CAZSButtonClick
          end
          object ChBKlient: TCheckBox
            Left = 52
            Top = 112
            Width = 89
            Height = 17
            Caption = #1042#1089#1077' '#1082#1083#1080#1077#1085#1090#1099
            TabOrder = 3
            OnClick = ChBKlientClick
          end
          object ceKlient: TComboEdit
            Left = 7
            Top = 136
            Width = 513
            Height = 21
            DirectInput = False
            GlyphKind = gkDropDown
            Anchors = [akLeft, akTop, akRight]
            NumGlyphs = 1
            TabOrder = 4
            OnButtonClick = ceKlientButtonClick
            OnDblClick = ceKlientButtonClick
          end
          object ceFromOrg: TComboEdit
            Left = 7
            Top = 29
            Width = 513
            Height = 21
            DirectInput = False
            GlyphKind = gkDropDown
            Anchors = [akLeft, akTop, akRight]
            NumGlyphs = 1
            TabOrder = 0
            OnButtonClick = ceFromOrgButtonClick
            OnDblClick = ceFromOrgButtonClick
          end
        end
        object pDate: TPanel
          Left = 1
          Top = 1
          Width = 531
          Height = 61
          Align = alClient
          BevelInner = bvRaised
          BevelOuter = bvLowered
          TabOrder = 0
          object gbPeriod: TGroupBox
            Left = 270
            Top = 2
            Width = 259
            Height = 57
            Align = alRight
            Caption = #1055#1077#1088#1080#1086#1076' '#1092#1086#1088#1084#1080#1088#1086#1074#1072#1085#1080#1103
            TabOrder = 0
            object lFromDate: TLabel
              Left = 14
              Top = 24
              Width = 11
              Height = 13
              Caption = #1086#1090
            end
            object lToDate: TLabel
              Left = 136
              Top = 24
              Width = 12
              Height = 13
              Caption = #1076#1086
            end
            object deFromDate: TDateEdit
              Left = 32
              Top = 20
              Width = 91
              Height = 21
              ButtonWidth = 17
              NumGlyphs = 2
              TabOrder = 0
              OnChange = deFromDateChange
            end
            object deToDate: TDateEdit
              Left = 155
              Top = 20
              Width = 91
              Height = 21
              ButtonWidth = 17
              NumGlyphs = 2
              TabOrder = 1
            end
          end
          object gbS_DATE: TGroupBox
            Left = 2
            Top = 2
            Width = 268
            Height = 57
            Align = alClient
            Caption = #1044#1072#1090#1072' '#1074#1099#1087#1080#1089#1082#1080
            TabOrder = 1
            object LblDateMotion1: TLabel
              Left = 122
              Top = 36
              Width = 58
              Height = 13
              Caption = #1079#1076#1074#1080#1075#1086#1084' '#1085#1072
              Visible = False
            end
            object LblDateMotion2: TLabel
              Left = 225
              Top = 36
              Width = 24
              Height = 13
              Caption = #1076#1085#1077#1081
              Visible = False
            end
            object deVipiska: TDateEdit
              Left = 6
              Top = 20
              Width = 92
              Height = 21
              ButtonWidth = 17
              NumGlyphs = 2
              TabOrder = 0
            end
            object seDateMotion: TRxSpinEdit
              Left = 183
              Top = 35
              Width = 41
              Height = 19
              Hint = #1044#1072#1090#1072' '#1074#1099#1087#1080#1089#1082#1080' '#1073#1091#1076#1077#1090' '#1089#1076#1074#1080#1085#1091#1090#1072' '#1085#1072#13#10#1101#1090#1086' '#1082#1086#1083#1080#1095#1077#1089#1090#1074#1086' '#1076#1085#1077#1081
              TabOrder = 1
              Visible = False
            end
            object cbGetDateFromDR: TCheckBox
              Left = 104
              Top = 18
              Width = 137
              Height = 17
              Caption = #1041#1088#1072#1090#1100' '#1076#1072#1090#1091' '#1089#1084#1077#1085#1099' '#1089#1086
              TabOrder = 2
              Visible = False
              OnClick = cbGetDateFromDRClick
            end
          end
        end
      end
    end
    object TPage
      Left = 0
      Top = 0
      Caption = 'Grid'
      object dbgHelper: TDBGridEh
        Left = 0
        Top = 0
        Width = 533
        Height = 236
        Align = alClient
        DataSource = ds
        FooterColor = clWindow
        FooterFont.Charset = DEFAULT_CHARSET
        FooterFont.Color = clWindowText
        FooterFont.Height = -10
        FooterFont.Name = 'MS Sans Serif'
        FooterFont.Style = []
        ReadOnly = True
        TabOrder = 0
        TitleFont.Charset = DEFAULT_CHARSET
        TitleFont.Color = clWindowText
        TitleFont.Height = -10
        TitleFont.Name = 'MS Sans Serif'
        TitleFont.Style = []
        UseMultiTitle = True
        Columns = <
          item
            EditButtons = <>
            FieldName = 'CLIENT_NAME'
            Footers = <>
            Title.Caption = #1050#1083#1080#1077#1085#1090
            Width = 187
          end
          item
            EditButtons = <>
            FieldName = 'AZS_NAME'
            Footers = <>
            Title.Caption = #1040#1047#1057
            Width = 78
          end
          item
            EditButtons = <>
            FieldName = 'WAS_FROM_DATE'
            Footers = <>
            Title.Caption = #1042#1099#1087#1080#1089#1072#1085#1099'|c'
            Width = 60
          end
          item
            EditButtons = <>
            FieldName = 'WAS_TO_DATE'
            Footers = <>
            Title.Caption = #1042#1099#1087#1080#1089#1072#1085#1099'|'#1087#1086
            Width = 60
          end
          item
            EditButtons = <>
            FieldName = 'WILL_FROM_DATE'
            Footers = <>
            Title.Caption = #1041#1091#1076#1091#1090' '#1074#1099#1087#1080#1089#1072#1085#1099'|c'
            Width = 60
          end
          item
            EditButtons = <>
            FieldName = 'WILL_TO_DATE'
            Footers = <>
            Title.Caption = #1041#1091#1076#1091#1090' '#1074#1099#1087#1080#1089#1072#1085#1099'|'#1087#1086
            Width = 60
          end
          item
            EditButtons = <>
            FieldName = 'SUM_NDS'
            Footers = <>
            Title.Caption = #1057#1091#1084#1084#1072
          end>
      end
    end
    object TPage
      Left = 0
      Top = 0
      Caption = 'InWork'
      DesignSize = (
        533
        236)
      object pInWork: TPanel
        Left = 120
        Top = 40
        Width = 305
        Height = 147
        Anchors = [akLeft, akTop, akRight, akBottom]
        TabOrder = 0
        object AnimatedImage1: TAnimatedImage
          Left = 8
          Top = 22
          Width = 81
          Height = 81
          Active = True
          Glyph.Data = {
            56520000424D5652000000000000360400002800000090010000320000000100
            080000000000204E000000000000000000000001000000010000000000004000
            000080000000FF000000002000004020000080200000FF200000004000004040
            000080400000FF400000006000004060000080600000FF600000008000004080
            000080800000FF80000000A0000040A0000080A00000FFA0000000C0000040C0
            000080C00000FFC0000000FF000040FF000080FF0000FFFF0000000020004000
            200080002000FF002000002020004020200080202000FF202000004020004040
            200080402000FF402000006020004060200080602000FF602000008020004080
            200080802000FF80200000A0200040A0200080A02000FFA0200000C0200040C0
            200080C02000FFC0200000FF200040FF200080FF2000FFFF2000000040004000
            400080004000FF004000002040004020400080204000FF204000004040004040
            400080404000FF404000006040004060400080604000FF604000008040004080
            400080804000FF80400000A0400040A0400080A04000FFA0400000C0400040C0
            400080C04000FFC0400000FF400040FF400080FF4000FFFF4000000060004000
            600080006000FF006000002060004020600080206000FF206000004060004040
            600080406000FF406000006060004060600080606000FF606000008060004080
            600080806000FF80600000A0600040A0600080A06000FFA0600000C0600040C0
            600080C06000FFC0600000FF600040FF600080FF6000FFFF6000000080004000
            800080008000FF008000002080004020800080208000FF208000004080004040
            800080408000FF408000006080004060800080608000FF608000008080004080
            800080808000FF80800000A0800040A0800080A08000FFA0800000C0800040C0
            800080C08000FFC0800000FF800040FF800080FF8000FFFF80000000A0004000
            A0008000A000FF00A0000020A0004020A0008020A000FF20A0000040A0004040
            A0008040A000FF40A0000060A0004060A0008060A000FF60A0000080A0004080
            A0008080A000FF80A00000A0A00040A0A00080A0A000FFA0A00000C0A00040C0
            A00080C0A000FFC0A00000FFA00040FFA00080FFA000FFFFA0000000C0004000
            C0008000C000FF00C0000020C0004020C0008020C000FF20C0000040C0004040
            C0008040C000FF40C0000060C0004060C0008060C000FF60C0000080C0004080
            C0008080C000FF80C00000A0C00040A0C00080A0C000FFA0C00000C0C00040C0
            C00080C0C000FFC0C00000FFC00040FFC00080FFC000FFFFC0000000FF004000
            FF008000FF00FF00FF000020FF004020FF008020FF00FF20FF000040FF004040
            FF008040FF00FF40FF000060FF004060FF008060FF00FF60FF000080FF004080
            FF008080FF00FF80FF0000A0FF0040A0FF0080A0FF00FFA0FF0000C0FF0040C0
            FF0080C0FF00FFC0FF0000FFFF0040FFFF0080FFFF00FFFFFF00DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB8484848484848484848484848484848484
            8484848484DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DB84848484848484848484848484848484848484848484DBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84848484848484848484848484
            848484848484848484DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDB84848484848484848484848484848484848484848484DBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB848484848484848484
            84848484848484848484848484DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDB84848484848484848484848484848484848484848484DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB8484848484
            8484848484848484848484848484848484DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDB84848484848484848484848484848484848484
            848484DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84D0
            D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
            D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDB84D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84D0D0D0D0D0D0D0D0D0D0D0
            D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDB84D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84D0D0D0D0D0D0D0
            D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDB84D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB84D0D0D0
            D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
            D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0D0D0D0D0
            D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBD0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0
            D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
            84DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0
            D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0
            D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FF9292FFFFFFFFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92
            FF92FF92FF00FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFFD0D092FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF
            9292FFFF9292FFFF00D0000000FFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF9292FFD0D092FFFFFF9292929292
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FFFFFF92FF92FFD0D0D0D0F100FFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            929292FFD0D0D0D092FFFF92FF92FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFD0D0F8F1F100FFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFD0F8F8F8F1F100
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF00D0000000FFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFF92929292FF9292FFFFFFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF929292
            92FF9292FF9292FFFFFCFCF8F8F8F1F100D0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92929292FFFCF8F8F192FF929292FFFF92
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFD0D0D0D0F100FFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF9292
            92FF00FFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF929292FF92FFFF92FFFFFCFCF8F8F8F1
            F100D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            92FF9292FCF8F8F1929292FF92FF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFD0D0F8F1F100
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFCFCF8F8F8F1F10084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFD0F8F8F8F1F100FFFFFFFFFFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFD0D092FFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFCF8F8
            F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFF929292FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFCFCF8F8F8F1
            F100929292929292FF92FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFF929292FFFFFFD0D092FF92929292FF92FFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292
            92FFFF929292929292929292FFFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FFFCF8F8F1929292929292FF92
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FF00FFFFFF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFF9292FCFCF8F8F8F1F10092FF9292929292FFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FF
            FFD0D0D0D092FF9292929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FFFFFF9292FF92FF9292929292FCFC
            F8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92
            92FF92FFFCF8F8F19292FF9292929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFCFCF8F8
            F8F1F100FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFD0D092FF
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFCFCF8F8F8F1F100FFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFCF8F8F192FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF929292929292FFFF
            92FF00D0000000FFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFF92FF92FFD0D092FFFFFF929292929292FFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF9292FCFC
            F8F8F8F1F10092929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFF92FF929292FCF8F8F192929292929292FFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF
            929292929292FFFF929292929292FFFFDBFCFCF8F8F8F1F100DBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF92FF9292FCF8F8F192FF929292929292
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFF92929292FF92929292929292FFD0D0D0D0F100DBD0D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92929292D0D0D0D092
            929292FF92FF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFF92929292FF92FCFCF8F8F8F1F100FF9292FFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92929292FF
            92FCF8F8F19292FF92FF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFF92929292FF92929292929292FF92FF9292FFFF
            DBD0FCFCF8F8F8929200DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92
            929292FFFCF8F8F1929292FF92FF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFD0D0F8F1F100D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FCFCF8F8F8F1F100FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D0FCFCF8DBDBE38200DBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD0F8F8F8F1F100D084DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFCF8F8F192
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFCFCF8F8F8F1F100FFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFCF8F8F192FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            DBD0D084FCFFDBE3E3E382DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFFDBDB9292FFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFF9292FFFFFF92FFFFFFFF00FFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292FFFFFF9292929292
            92FF92FCFCF8F8F8F1F10084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFF9292FFFCF8F8F192929292FF9292FF92FFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292FFFFFF92
            9292FCFCF8F8F8F1F100FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFF9292FFFFFFFCF8F8F19292FF9292FF92FFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292
            FFFFFF929292929292FF9292FF92FFFFDBD0D084DBFFFFE3E3E3DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292FFFFFFDBDB92929292FF9292FF92
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FFFF9292FFFFFFFFFF0000
            FFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFF9292FFFF9292FFFF92FFFF92FFFFFFFCFCF8F8F8F1F100DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FFFFFCF8F8F192
            FFFF92FFFFFF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFF9292FFFF9292FFFF92FFFCFCF8F8F8929200FFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FFFF92
            92FCF8F8F19292FFFFFF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFF9292FFFF9292FFFF92FFFF92FFFFFF9292FFFF
            DBD0D084DBDBDBE3E3DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92
            92FFFF92E3E3E38292FF92FFFFFF9292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFFD0D092FFFFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFCFCF8DBDBE38200DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFE3E3E38292FFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFD0D0
            92FFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFCF8F8F8F1F100DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFCF8F8F192
            FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFFDBE3E3E382DBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFCF8F8F192FFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFFE38292FFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FF92FF929292FF00D00000
            00FFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFF929292FF92FF929292D0D0D0D0929292FFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FF92FF929292FF
            92FFFF929292FFFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFF929292FCF8F8F19292FF92FFFF929292FFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FF92FF
            929292FF92FFFF92E3E3E3FFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFF929292FF92FCF8F8F19292FFFF929292FFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF9292
            92FF92FF929292FF92FFFF929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF929292FF92FF929292FF92FFFF929292
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FF9292FF92FFFF92FF92FF92D0D0D0D0F100FFFFDBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FFFF92FF92FFFCF8F8
            F1929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFF9292FF92FFFF92FF92FF92FFFFFF929292FFFFFCFCF8F8F8F1F100
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FCF8F8F192
            FF92FFFFFF929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFF9292FF92FFFF92FF92FF92FFFFFF92E3E3DBFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FF
            FFFCF8F8F192FFFFFF929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFF9292FF92FFFF92FF92FF92FFFFFF929292FFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFF92
            92FF92FFFF92FF92FF92FFFFFF929292FFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFD0D0F8
            F1F100FFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFFFFFFFFFFFCF8F8F192FFFFFFFFDBD0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFDBFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFFFFFDBD0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFCF8F8F192FFFFFFFFFFFFFFFFDBD0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FF
            FFFFFFFFFFFFFF000000000000D0F8F8F8F1F100DBD0D084DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF00000000FCF8F8
            F192FFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0FFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFDBD0FCFCF8F8F8F1
            F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFCF8F8F192
            000000FFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0FFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFDBD0D084
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFF
            FFFFDBDB929200FFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFF
            DBD0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFF
            FFFFFFFFFF000000000000FFFFFFFFFFFFFFDBD0D084DBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF000000000000FCFCF8
            F8F8F1F100D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0
            D0FFFFFFFFFFFFFFFF00000000FCF8F8F192FFFFFFFFD0D0D084DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF0000000000
            00FFFFFFFFFFFFFFD0D0D0FCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBD0D0FFFFFFFFFFFFFCF8F8F192000000FFFFFFFFFFFFFFD0D0D084DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF00
            0000000000FFFFFFFFFFFFFFD0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFFFFDBDB929200FFFFFFFFFFFFFFD0D0
            D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFF
            FFFFFF000000000000FFFFFFFFFFFFFFD0D0D084DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBD0D0FFFFFFFFFFFFFFFF000000000000FFFFFFFFFF
            FFFFD0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0
            D0D0D0D0D0D0D0D000000000D0D0FCFCF8F8F8F1F10084DBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D0000000FCF8F8
            F192D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBD0D0D0D0D0D0D0D0D0D000000000D0D0D0D0D0D0D0D0D0D084DBFCFCF8F8
            F8929200DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0FCF8F8F192
            0000D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D000000000D0D0D0D0D0D0D0D0D0D084DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0
            D0E3E3E38292D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D000000000D0D0D0D0D0D0D0D0
            D0D084DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0
            D0D0D0D0D0D000000000D0D0D0D0D0D0D0D0D0D084DBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D00000D0D0D0D0FC
            FCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBD0D0D0D0D0D0D0D0D0D00000FCF8F8F192D0D0D0D0D0DBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D00000D0
            D0D0D0D0D0D0D0D0D0DBDBDBDBFCFCF8DBDBE38200DBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBD0D0D0D0D0D0FCF8F8F19200D0D0D0D0D0D0D0D0D0D0DBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0
            D00000D0D0D0D0D0D0D0D0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0E3E3E38292D0D0D0D0D0D0D0D0D0DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0
            D0D0D0D0D00000D0D0D0D0D0D0D0D0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBD0D0D0D0D0D0D0D0D0D00000D0D0D0D0D0D0D0
            D0D0D0DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDB0000DBDBDBDBDBFCFCF8F8F8F1F100DBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000FCF8F8
            F192DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCFF
            DBE3E3E382DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFFDBDB9292
            00DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBE38292DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDB0000DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDB
            DBFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDB0000FCF8F8F192DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFFFFE3E3E3DBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBFFDBDB929200DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DB0000DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDB0000DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB0000DBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCFCF8F8F8F1F100DBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCF8F8
            F192DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBE3E3DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBE3E3E38292
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBFCF8F8F192DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBE3E3E38292DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCFCF8F8F8F1F100DBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCF8F8
            F192DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBE38292DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBFCFCF8F8F8F1F100DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBFCF8F8F192DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCFCF8F8F8929200DBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCF8F8
            F192DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBFCFCF8DBDBE38200DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBFFDBDB9292DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFCFFDBE3E3E382DB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBFFDBDB
            9292DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBFFFFE3E3E3DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBE3E3E38292DBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBE3E3DBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBE3E3E3
            8292DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBE38292DBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB
            DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDB}
          GlyphNum = 2
          Interval = 200
          NumGlyphs = 8
        end
        object LblInWork: TLabel
          Left = 106
          Top = 23
          Width = 183
          Height = 98
          AutoSize = False
          Caption = 
            '  '#1048#1076#1077#1090' '#1092#1086#1088#1084#1080#1088#1086#1074#1072#1085#1080#1077' '#1082#1085#1080#1075#1080' '#13#10#1087#1088#1086#1076#1072#1078'.'#13#10#13#10'  '#1069#1090#1086#1090' '#1087#1088#1086#1094#1077#1089#1089' '#1084#1086#1078#1077#1090' '#1079#1072#1085#1103 +
            #1090#1100' '#13#10#1085#1077#1089#1082#1086#1083#1100#1082#1086' '#1084#1080#1085#1091#1090' '#1074' '#1079#1072#1074#1080#1089#1080#1084#1086#1089#1090#1080' '#13#10#1086#1090' '#1087#1088#1086#1080#1079#1074#1086#1076#1080#1090#1077#1083#1100#1085#1086#1089#1090#1080' '#1089#1077#1088#1074#1077 +
            #1088#1072' '#13#10#1080' '#1077#1075#1086' '#1079#1072#1075#1088#1091#1079#1082#1080'.'
          WordWrap = True
        end
      end
    end
    object TPage
      Left = 0
      Top = 0
      Caption = 'Warning'
      DesignSize = (
        533
        236)
      object pWarning: TPanel
        Left = 125
        Top = 60
        Width = 303
        Height = 125
        Anchors = [akLeft, akTop, akRight, akBottom]
        Enabled = False
        TabOrder = 0
        object Memo: TMemo
          Left = 29
          Top = 15
          Width = 249
          Height = 97
          Color = clScrollBar
          Font.Charset = DEFAULT_CHARSET
          Font.Color = clWindowText
          Font.Height = -9
          Font.Name = 'MS Sans Serif'
          Font.Style = [fsBold]
          Lines.Strings = (
            ' '
            '        '#1055#1088#1086#1080#1079#1086#1096#1077#1083' '#1086#1073#1088#1099#1074' '#1087#1088#1086#1075#1088#1072#1084#1084#1099'.'
            ''
            '        '#1044#1083#1103' '#1087#1088#1086#1076#1086#1083#1078#1077#1085#1080#1103', '#1079#1072#1082#1088#1086#1081#1090#1077' '
            '    '#1092#1086#1088#1084#1091'.'
            '')
          ParentFont = False
          TabOrder = 0
        end
      end
    end
  end
  object qNullNum: TOilQuery
    SQL.Strings = (
      'select * from oil_sale_book where '
      '  num is null and'
      '  state = '#39'Y'#39' and nn_cause_id = :cause_id')
        RequestLive = False
    UpdateMode = upWhereAll
    Left = 88
    Top = 184
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'cause_id'
      end>
  end
  object qLockTable: TOilQuery
    SQL.Strings = (
      'lock table oil_nnum_reserve in share mode nowait')
        RequestLive = False
    UpdateMode = upWhereAll
    Left = 56
    Top = 16
  end
  object qDelete: TOilQuery
    SQL.Strings = (
      'Update Oil_sale_book'
      '   set state = '#39'N'#39
      ' where (id, inst) in'
      '       (select id,'
      '               inst'
      '          from V_OIL_SALE_BOOK'
      '         where nn_Cause_id = :cause_id and '
      '               todate between :from_date and :todate and'
      '               from_date between :from_date and :todate and'
      '               ((organ = :org_id and organ_inst = :org_inst) or'
      '                (:org_id = -1 and :org_inst = -1)) and'
      '               ((azs_id = :azs_id and azs_inst = :azs_inst) or'
      '                (:azs_id = -1 and :azs_inst = -1 and'
      '                (azs_id, azs_inst) in'
      '                 (select o.id,'
      '                         o.inst'
      '                    from v_org o'
      '                   where id = inst and'
      
        '                         par = :from_id and par_inst = :from_ins' +
        't and'
      '                         Org_type = 8))))')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 56
    Top = 64
    ParamData = <
      item
        DataType = ftInteger
        Name = 'cause_id'
      end
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftUnknown
        Name = 'todate'
      end
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftUnknown
        Name = 'todate'
      end
      item
        DataType = ftInteger
        Name = 'org_id'
      end
      item
        DataType = ftInteger
        Name = 'org_inst'
      end
      item
        DataType = ftInteger
        Name = 'org_id'
      end
      item
        DataType = ftInteger
        Name = 'org_inst'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftInteger
        Name = 'azs_inst'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftInteger
        Name = 'azs_inst'
      end
      item
        DataType = ftInteger
        Name = 'from_id'
      end
      item
        DataType = ftInteger
        Name = 'from_inst'
      end>
  end
  object ds: TOraDataSource
    Left = 96
    Top = 64
  end
  object qDelNotUsed: TOilQuery
    SQL.Strings = (
      'update OIL_SALE_BOOK b'
      '   set b.state = '#39'N'#39
      ' where b.nn_cause_id = :CAUSE_ID and'
      '       (id,inst) in'
      '       (select id,inst'
      '          from v_oil_sale_book '
      '         where nds_t is null'
      '           and nn_cause_id = :CAUSE_ID'
      '           and s_date = :SDATE)'
      ' ')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 432
    Top = 64
    ParamData = <
      item
        DataType = ftInteger
        Name = 'cause_id'
      end
      item
        DataType = ftInteger
        Name = 'CAUSE_ID'
      end
      item
        DataType = ftDateTime
        Name = 'SDATE'
      end>
  end
  object qReserve: TOilQuery
    SQL.Strings = (
      '-- '#1053#1053' '#1089' '#1040#1047#1057
      'select id, inst'
      '  from V_OIL_SALE_BOOK_BASE'
      ' where nn_Cause_id = :cause_id'
      '   and todate between :from_date and :todate'
      '   and from_date between :from_date and :todate'
      '   and ((organ = :org_id and organ_inst = :org_inst) or'
      '       (:org_id = -1 and :org_inst = -1))'
      '   and ((azs_id = :azs_id and azs_inst = :azs_inst) or'
      '       (:azs_id = -1 and :azs_inst = -1 and'
      '       (azs_id, azs_inst) in'
      '       (select o.id, o.inst'
      '            from v_org o'
      '           where id = inst'
      '             and par = :from_id'
      '             and par_inst = :from_inst'
      '             and Org_type = 8)))'
      ' union all'
      '-- '#1053#1053' '#1086#1089#1090#1072#1083#1100#1085#1099#1077' '
      'select id, inst'
      '  from V_OIL_SALE_BOOK_BASE'
      ' where nn_Cause_id = :cause_id'
      '   and ((organ = :org_id and organ_inst = :org_inst) or'
      '       (:org_id = -1 and :org_inst = -1))'
      '   and azs_id is null and azs_inst is null'
      '   and s_date between :from_date and :todate')
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 88
    Top = 136
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'cause_id'
      end
      item
        DataType = ftUnknown
        Name = 'from_date'
      end
      item
        DataType = ftUnknown
        Name = 'todate'
      end
      item
        DataType = ftUnknown
        Name = 'org_id'
      end
      item
        DataType = ftUnknown
        Name = 'org_inst'
      end
      item
        DataType = ftUnknown
        Name = 'azs_id'
      end
      item
        DataType = ftUnknown
        Name = 'azs_inst'
      end
      item
        DataType = ftUnknown
        Name = 'from_id'
      end
      item
        DataType = ftUnknown
        Name = 'from_inst'
      end>
  end
  object qNal: TOilQuery
    Session = frmStart.OraSession1
    SQL.Strings = (
      '/* '#1050#1074#1077#1088#1103' '#1080#1089#1087#1086#1083#1100#1079#1091#1077#1090#1100#1089#1103' '#1074' SlBook */'
      'select s.*,'
      '       dr.*,'
      '       money_dr - nvl(s.nds_t, 0) money,'
      
        '       round((money_dr - nvl(s.nds_t, 0)) / dr.s_price, 3) rasch' +
        '_litr'
      '--DAILY_REPORT'
      '  from (select sum(drd.out_nal_money) money_dr,'
      '               sum(drd.out_nal_litr) litr,'
      
        '               round(sum(drd.out_nal_litr) * drd.s_price, 2) ras' +
        'ch_money,'
      
        '               round(sum(drd.out_nal_money) / drd.s_price, 3) ra' +
        'sch_litr_dr,'
      '               drd.s_price,'
      
        '               decode(p.dim_id, 2, 28, p.dim_id) dim, -- '#1077#1089#1083#1080' '#1090#1086 +
        #1085#1085#1099', '#1090#1086' '#1084#1077#1085#1103#1077#1084' '#1085#1072' '#1083#1080#1090#1088#1099
      '               p.np_type'
      
        '          from oil_dr_data drd, oil_daily_rep dr, oil_rashod ras' +
        ', oil_part p'
      '         where drd.rep_id = dr.id'
      '           and drd.rep_inst = dr.inst'
      '           and drd.ttn_id = ras.id'
      '           and drd.ttn_inst = ras.inst'
      '           and ras.part_id = p.id'
      '           and ras.part_inst = p.inst'
      '           and dr.state = '#39'Y'#39
      '           and drd.state = '#39'Y'#39
      '           and ras.state = '#39'Y'#39
      '           and p.state = '#39'Y'#39
      '           and drd.s_price <> 0'
      '           and drd.out_nal_money <> 0'
      '              --PARAMS'
      '           and (trunc(dr.rep_date) = :date_ or :date_ is null)'
      '           and ((dr.azs_id = :azs_id) or :azs_id is null)'
      '           and (p.np_type = :np_id or :np_id is null)'
      '           and exists (select 1'
      '                  from oil_org a'
      '                 where a.id = dr.azs_id'
      '                   and a.inst = dr.azs_inst'
      '                   and a.par = ov.GetVal('#39'INST'#39')'
      '                   and a.par_inst = ov.GetVal('#39'INST'#39')'
      '                   and a.org_type = 8)'
      '         group by s_price, p.np_type, p.dim_id) dr,'
      '       --SALE_BOOK'
      
        '       (select sum(sdet.nds_t) nds_t, sdet.tov_id, sdet.price_nd' +
        's'
      '          from oil_sale_book sb, oil_sale_book_det sdet'
      '         where sb.id = sdet.nn_id'
      '           and sb.inst = sdet.nn_inst'
      '           and sb.nn_cause_id in (9, 26)'
      '           and sb.state = '#39'Y'#39
      '           and sdet.state = '#39'Y'#39
      '           and sdet.det_date is not null'
      '              -- PARAMS'
      '           and (trunc(sdet.det_date) = :date_ or :date_ is null)'
      '           and ((sb.azs_id = :azs_id) or :azs_id is null)'
      '           and (sdet.tov_id = :np_id or :np_id is null)'
      '           and (:with_nn is null)'
      
        '           and ((sb.nn_cause_id = 9 and sb.inst = ov.GetVal('#39'INS' +
        'T'#39')) or'
      '               (sb.nn_cause_id = 26 and exists'
      '                (select *'
      '                    from oil_org o'
      '                   where o.id = o.inst'
      '                     and sb.inst = o.par'
      '                     and ov.GetVal('#39'INST'#39') = o.par'
      '                     and o.org_type in (3, 4))))'
      '         group by sdet.tov_id, sdet.price_nds) s'
      ' where s.tov_id(+) = dr.np_type'
      '   and s.price_nds(+) = dr.s_price'
      ' order by dr.np_type')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 272
    Top = 136
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'date_'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftUnknown
        Name = 'np_id'
      end
      item
        DataType = ftUnknown
        Name = 'with_nn'
      end>
  end
  object qCheckNN: TOilQuery
    Session = frmStart.OraSession1
    SQL.Strings = (
      'select * '
      '  from oil_sale_book sb,'
      '       oil_sale_book_det det'
      ' where sb.id = det.nn_id and sb.inst = det.nn_inst '
      
        '   and sb.state = '#39'Y'#39' and det.state = '#39'Y'#39' and sb.nn_cause_id in ' +
        '(9,26)'
      
        '   and sb.s_date between trunc(to_date(:det_date,'#39'DD.MM.YYYY'#39'),'#39 +
        'mon'#39') and to_date(:det_date,'#39'DD.MM.YYYY'#39') ')
    FetchRows = 100
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 321
    Top = 136
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'det_date'
        ParamType = ptInput
      end>
  end
  object qHelper: TOilQuery
    Session = frmStart.OraSession1
    SQL.Strings = (
      'select sbook_creator.from_date_old was_from_date,'
      '       sbook_creator.to_date_old   was_to_date,'
      '       sbook_creator.from_date_new will_from_date,'
      '       sbook_creator.to_date_new   will_to_date,'
      '       sbook_creator.org_id        organ,'
      '       sbook_creator.org_inst      organ_inst,'
      '       azs.name                    azs_name,'
      '       azs.id                      azs_id,'
      '       azs.inst                    azs_inst,'
      '       client.name                 client_name'
      '  from (select nvl(org_id,to_number(null))org_id,'
      '               nvl(org_inst,to_number(null))org_inst,'
      '               nvl(azs_id,to_number(null))azs_id,'
      '               nvl(azs_inst,to_number(null))azs_inst,'
      
        '               nvl(max(from_date_old),to_date(null)) from_date_o' +
        'ld,'
      '               nvl(max(to_date_old),to_date(null)) to_date_old,'
      
        '               nvl(max(from_date_new),to_date(null)) from_date_n' +
        'ew,'
      '               nvl(max(to_date_new),to_date(null)) to_date_new'
      '          from (select azs.org_id,'
      '                       azs.org_inst,'
      '                       azs.azs_id,'
      '                       azs.azs_inst,'
      '                       azs.from_date_old,'
      '                       azs.to_date_old,'
      '                       azs.from_date_new from_date_new,'
      
        '                       to_date(to_char(azs.to_date_new,'#39'ddmmyyyy' +
        #39'),'
      '                         '#39'ddmmyyyy'#39') to_date_new'
      '                  from (select oil_org.nal_num nal_num,'
      
        '                               oil_daily_rep.rep_date as string_' +
        'date,'
      '                               oil_np_type.name as np_name,'
      '                               oil_np_type.id as np_id,'
      '                               '#39#1083#39' as np_dim,'
      '                               oil_vedomost.litr as quantity,'
      
        '                               Nds.GetNoNds_WithNds(oil_vedomost' +
        '.price,'
      
        '                                                    oil_daily_re' +
        'p.rep_date) as p_vnds,'
      '                               oil_vedomost.amount as summ,'
      '                               oil_vedomost.amount -'
      
        '                               round(oil_vedomost.amount * NDS.T' +
        'AX_RATE(oil_rashod.date_) /'
      
        '                                     (1 + NDS.TAX_RATE(oil_rasho' +
        'd.date_)),'
      '                                     2) as sum_20,'
      '                               sb.org_id,'
      '                               sb.org_inst,'
      '                               sb.azs_id,'
      '                               sb.azs_inst,'
      '                               sb.from_date_old,'
      '                               sb.to_date_old,'
      '                               sb.from_date_new,'
      '                               sb.to_date_new'
      '                          from (select cr.org_id,'
      '                                       cr.org_inst,'
      '                                       cr.azs_id,'
      '                                       cr.azs_inst,'
      
        '                                       to_date(null) from_date_o' +
        'ld,'
      
        '                                       to_date(null) to_date_old' +
        ','
      '                                       nvl(sb.from_date,'
      
        '                                         to_date(to_char(trunc(:' +
        'from_date,'#39'mon'#39'),'
      
        '                                           '#39'ddmmyyyy'#39'),'#39'ddmmyyyy' +
        #39')) from_date_new,'
      '                                       cr.todate to_date_new'
      '                                  from (select organ,'
      '                                               organ_inst,'
      '                                               azs_id,'
      '                                               azs_inst,'
      
        '                                               (max(todate) + 1)' +
        ' from_date,'
      '                                               :todate todate'
      '                                          from v_oil_sale_book'
      '                                         where nn_cause_id = 11'
      
        '                                           and (todate between :' +
        'from_date and :todate'
      '                                            or from_date between'
      
        '                                              to_date(to_char(tr' +
        'unc(:from_date,'
      
        '                                                '#39'mon'#39'),'#39'ddmmyyyy' +
        #39'),'#39'ddmmyyyy'#39') and :todate)'
      
        '                                           and inst = ov.GetVal(' +
        #39'INST'#39')'
      '                                         group by organ,'
      '                                                  organ_inst,'
      '                                                  azs_id,'
      '                                                  azs_inst) sb,'
      '                                       (select distinct dr.inst,'
      
        '                                                        ve.org_i' +
        'd,'
      
        '                                                        ve.org_i' +
        'nst,'
      
        '                                                        dr.azs_i' +
        'd,'
      
        '                                                        dr.azs_i' +
        'nst,'
      
        '                                                        trunc(:f' +
        'rom_date,'#39'mon'#39') from_date,'
      
        '                                                        :todate ' +
        'todate'
      '                                          from oil_vedomost  ve,'
      
        '                                               oil_dr_data   drd' +
        ','
      '                                               oil_daily_rep dr'
      
        '                                         where ve.srep_id = drd.' +
        'id'
      
        '                                           and ve.srep_inst = dr' +
        'd.inst'
      
        '                                           and drd.rep_id = dr.i' +
        'd'
      
        '                                           and drd.rep_inst = dr' +
        '.inst'
      '                                           and drd.state = '#39'Y'#39
      '                                           and ve.state = '#39'Y'#39
      '                                           and dr.state = '#39'Y'#39
      
        '                                           and trunc(dr.rep_date' +
        ') >='
      
        '                                             to_date(to_char(tru' +
        'nc(:from_date,'
      
        '                                               '#39'mon'#39'),'#39'ddmmyyyy'#39 +
        '),'#39'ddmmyyyy'#39')'
      
        '                                           and trunc(dr.rep_date' +
        ') <= :todate'
      
        '                                           and ((dr.azs_id = :az' +
        's_id and dr.azs_inst = :azs_inst) or'
      
        '                                               (:azs_id = -1 and' +
        ' :azs_inst = -1 '
      
        '                                               and exists (selec' +
        't 1'
      
        '                                                             fro' +
        'm oil_org a'
      
        '                                                            wher' +
        'e a.id = dr.azs_id'
      
        '                                                              an' +
        'd a.inst = dr.azs_inst'
      
        '                                                              an' +
        'd a.par = ov.GetVal('#39'INST'#39')'
      
        '                                                              an' +
        'd a.par_inst = ov.GetVal('#39'INST'#39')'
      
        '                                                              an' +
        'd a.org_type = 8)))'
      
        '                                           and ((ve.org_id = :or' +
        'g_id and ve.org_inst = :org_inst) or'
      
        '                                               (:org_id = -1 and' +
        ' :org_inst = -1))) cr'
      '                                 where cr.org_id = sb.organ(+)'
      
        '                                   and cr.org_inst = sb.organ_in' +
        'st(+)'
      '                                   and cr.azs_id = sb.azs_id(+)'
      
        '                                   and cr.azs_inst = sb.azs_inst' +
        '(+)'
      '                                   and nvl(sb.from_date,'
      
        '                                           to_date(to_char(trunc' +
        '(:from_date,'#39'mon'#39'),'
      
        '                                             '#39'ddmmyyyy'#39'),'#39'ddmmyy' +
        'yy'#39')) <= :todate'
      '                                      ) sb,'
      '                               oil_daily_rep,'
      '                               oil_np_type,'
      '                               oil_vedomost,'
      '                               oil_dr_data drd,'
      '                               oil_rashod,'
      '                               oil_part,'
      '                               v_org oil_org'
      '                         where oil_daily_rep.state = '#39'Y'#39
      
        '                           and trunc(oil_daily_rep.rep_date) >= ' +
        'sb.from_date_new'
      
        '                           and trunc(oil_daily_rep.rep_date) <= ' +
        'sb.to_date_new'
      '                           and oil_daily_rep.azs_id = sb.azs_id'
      
        '                           and oil_daily_rep.azs_inst = sb.azs_i' +
        'nst'
      '                           and drd.state = '#39'Y'#39
      '                           and oil_daily_rep.id = drd.rep_id'
      '                           and oil_daily_rep.inst = drd.rep_inst'
      '                           and oil_vedomost.srep_id = drd.id'
      '                           and oil_vedomost.srep_inst = drd.inst'
      '                           and oil_vedomost.org_id = sb.org_id'
      
        '                           and oil_vedomost.org_inst = sb.org_in' +
        'st'
      '                           and oil_vedomost.state = '#39'Y'#39
      '                           and oil_rashod.state = '#39'Y'#39
      '                           and oil_rashod.id = drd.ttn_id'
      '                           and oil_rashod.inst = drd.ttn_inst'
      '                           and oil_part.state = '#39'Y'#39
      '                           and oil_part.id = oil_rashod.part_id'
      
        '                           and oil_part.inst = oil_rashod.part_i' +
        'nst'
      '                           and oil_np_type.id = oil_part.np_type'
      '                           and oil_org.id = sb.Org_inst'
      '                           and oil_org.inst = sb.Org_Inst'
      '                              ) azs'
      '                 group by azs.org_id,'
      '                          azs.org_inst,'
      '                          azs.azs_id,'
      '                          azs.azs_inst,'
      '                          azs.from_date_old,'
      '                          azs.to_date_old,'
      '                          azs.from_date_new,'
      '                          azs.to_date_new'
      '                 union all'
      '                select nvl(organ,to_number(null)) org_id,'
      '                       nvl(organ_inst,to_number(null)) org_inst,'
      '                       nvl(azs_id,to_number(null))azs_id,'
      '                       nvl(azs_inst,to_number(null))azs_inst,'
      
        '                       nvl(Min(from_date),to_date(null)) from_da' +
        'te_old,'
      
        '                       nvl(Max(todate),to_date(null)) to_date_ol' +
        'd,'
      '                       to_date(null) from_date_new,'
      '                       to_date(null) to_date_new'
      '                  from v_oil_sale_book'
      '                 where nn_Cause_id = 11'
      '                   and (todate between :from_date and :todate'
      
        '                    or from_date between to_date(to_char(trunc(:' +
        'from_date,'#39'mon'#39'),'
      '                      '#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39') and :todate)'
      '                   and inst = ov.GetVal('#39'INST'#39')'
      '                 group by organ,'
      '                          organ_inst,'
      '                          azs_id,'
      '                          azs_inst)'
      '         group by org_id,'
      '                  org_inst,'
      '                  azs_id,'
      '                  azs_inst) sbook_creator,'
      '       v_org azs,'
      '       v_org Client'
      ' where sbook_creator.org_id = client.id'
      '   and sbook_creator.org_inst = client.inst'
      '   and sbook_creator.azs_id = azs.id'
      '   and sbook_creator.azs_inst = azs.inst'
      '   and azs.org_type = 8'
      '   and ((azs.id = :azs_id and azs.inst = :azs_inst) or'
      '       (:azs_id = -1 and :azs_inst = -1 '
      '        and exists (select 1'
      '                      from oil_org a'
      '                     where a.id = azs.id'
      '                       and a.inst = azs.inst'
      '                       and a.par = ov.GetVal('#39'INST'#39')'
      '                       and a.par_inst = ov.GetVal('#39'INST'#39')'
      '                       and a.org_type = 8)))'
      
        '   and ((client.id = :org_id and client.inst = :org_inst) or (:o' +
        'rg_id = -1 and :org_inst = -1))'
      ' order by client.name,'
      '          azs.name')
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 312
    Top = 40
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftDateTime
        Name = 'todate'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftInteger
        Name = 'azs_inst'
      end
      item
        DataType = ftInteger
        Name = 'org_id'
      end
      item
        DataType = ftInteger
        Name = 'org_inst'
      end>
  end
  object qInsert: TOilQuery
    SQL.Strings = (
      'insert into oil_sale_book'
      '('
      '  id,'
      '  inst,'
      '  state,'
      '  s_date,'
      '  r_date,'
      '  from_,'
      '  from_inst,'
      '  organ,'
      '  organ_inst,'
      '  sale_txt,'
      '  azs_id,'
      '  azs_inst,'
      '  frasch,'
      '  nn_type_id,'
      '  nn_cause_id,'
      '  f_doc'
      '  )'
      'select s_oil_sale_book.nextval,'
      '       ov.GetVal('#39'INST'#39'),'
      '       '#39'Y'#39','
      '       trunc(:sdate),'
      '       trunc(:sdate),'
      '       :from_id,'
      '       :from_inst,'
      '       f,'
      '       g,'
      '       /* h||'#39';'#39'||i, */'
      
        '       to_char(h, '#39'DD.MM.YYYY'#39') || '#39';'#39' || to_char(i, '#39'DD.MM.YYYY' +
        #39'),'
      '       j,'
      '       k,'
      '       '#39#1054#1087#1083#1072#1090#1072' '#1089' '#1088'/'#1089#39','
      '       2,'
      '       11,'
      '       l'
      '  from (select distinct a.org_id as f,'
      '                        a.org_inst as g,'
      
        '                        nvl(a.from_date_real, trunc(:from_date, ' +
        #39'mon'#39')) as h,'
      '                        :todate as i,'
      '                        a.azs_id as j,'
      '                        a.azs_inst as k,'
      '                        decode(ov.Language,'
      
        '                          1,'#39#1047#1075#1110#1076#1085#1086' '#1076#1086#1075#1086#1074#1086#1088#1091' '#39'||a.dog||'#39' '#1074#1110#1076' '#39'||' +
        'to_char(a.dog_date,'#39'dd.mm.yyyy'#39'),'
      
        '                            '#39#1057#1086#1075#1083#1072#1089#1085#1086' '#1076#1086#1075#1086#1074#1086#1088#1072' '#39'||a.dog||'#39' '#1086#1090' '#39'|' +
        '|to_char(a.dog_date,'#39'dd.mm.yyyy'#39')) as l'
      
        '          from (select nvl(sb.from_date, trunc(:from_date, '#39'mon'#39 +
        ')) from_date_real,'
      '                       cr.org_id org_id,'
      '                       cr.org_inst org_inst,'
      '                       cr.azs_id azs_id,'
      '                       cr.azs_inst azs_inst,'
      '                       cr.inst inst,'
      '                       sb.from_date,'
      '                       cr.dog,'
      '                       cr.dog_date'
      '                  from (select organ,'
      '                               organ_inst,'
      '                               azs_id,'
      '                               azs_inst,'
      '                               max(todate) + 1 from_date'
      '                          from v_oil_sale_book_base s'
      '                         where nn_cause_id = 11'
      
        '                           and (todate between :from_date and :t' +
        'odate'
      
        '                            or from_date between trunc(:from_dat' +
        'e, '#39'mon'#39') and :todate)'
      '                           and exists (select 1'
      '                                         from oil_org a'
      '                                        where a.id = s.azs_id'
      
        '                                          and a.inst = s.azs_ins' +
        't'
      
        '                                          and a.par = ov.GetVal(' +
        #39'INST'#39')'
      
        '                                          and a.par_inst = ov.Ge' +
        'tVal('#39'INST'#39')'
      
        '                                          and a.org_type = 8)   ' +
        '                       '
      
        '                         group by organ, organ_inst, azs_id, azs' +
        '_inst) sb,'
      '                       (select distinct '
      '                               dr.inst,'
      '                               ve.org_id,'
      '                               ve.org_inst,'
      '                               d.dog,'
      '                               d.dog_date,'
      '                               ve.dog_inst,'
      '                               dr.azs_id,'
      
        '                               dr.azs_inst,                     ' +
        '                   '
      
        '                               trunc(:from_date, '#39'mon'#39') from_dat' +
        'e,'
      '                               :todate todate'
      '                          from oil_vedomost  ve,'
      '                               oil_dr_data   drd,'
      '                               oil_daily_rep dr,'
      
        '                               (select row_number()over(partitio' +
        'n by to_, to_inst order by dog_date desc) rn,'
      '                                       d.dog, d.dog_date,'
      '                                       to_, to_inst'
      '                                  from oil_dog d'
      '                                 where d.state = '#39'Y'#39
      '                                   and d.dog_type = '#39'V'#39
      '                                   and dog_date <= :todate) d'
      '                         where ve.srep_id = drd.id'
      '                           and ve.srep_inst = drd.inst'
      '                           and drd.rep_id = dr.id'
      '                           and drd.rep_inst = dr.inst'
      '                           and drd.state = '#39'Y'#39
      '                           and ve.state = '#39'Y'#39
      '                           and dr.state = '#39'Y'#39
      '                           and d.rn = 1'
      
        '                           and d.to_ = ve.org_id and d.to_inst =' +
        ' ve.org_inst'
      
        '                           and trunc(dr.rep_date) >= trunc(:from' +
        '_date, '#39'mon'#39')'
      '                           and trunc(dr.rep_date) <= :todate'
      '                           and exists (select 1'
      '                                         from oil_org a'
      '                                        where a.id = dr.azs_id'
      
        '                                          and a.inst = dr.azs_in' +
        'st'
      
        '                                          and a.par = ov.GetVal(' +
        #39'INST'#39')'
      
        '                                          and a.par_inst = ov.Ge' +
        'tVal('#39'INST'#39')'
      '                                          and a.org_type = 8)'
      '                           and ((dr.azs_id = :azs_id and'
      '                               dr.azs_inst = :azs_inst) or'
      
        '                               (:azs_id = -1 and :azs_inst = -1 ' +
        'and'
      '                               (dr.azs_id, dr.azs_inst) in'
      '                               (select o.id, o.inst'
      '                                    from v_org o'
      '                                   where id = inst'
      '                                     and par = :from_id'
      '                                     and par_inst = :from_inst'
      '                                     and Org_type = 8)))'
      '                           and ((ve.org_id = :org_id and'
      '                               ve.org_inst = :org_inst) or'
      
        '                               (:org_id = -1 and :org_inst = -1)' +
        ') /***/'
      '                        ) cr'
      '                 where cr.org_id = sb.organ(+)'
      '                   and cr.org_inst = sb.organ_inst(+)'
      '                   and cr.azs_id = sb.azs_id(+)'
      '                   and cr.azs_inst = sb.azs_inst(+)'
      
        '                   and nvl(sb.from_date(+), trunc(:from_date, '#39'm' +
        'on'#39')) <= :todate) a)')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 352
    Top = 40
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'sdate'
      end
      item
        DataType = ftUnknown
        Name = 'from_id'
      end
      item
        DataType = ftUnknown
        Name = 'from_inst'
      end
      item
        DataType = ftUnknown
        Name = 'from_date'
      end
      item
        DataType = ftUnknown
        Name = 'todate'
      end
      item
        DataType = ftUnknown
        Name = 'azs_id'
      end
      item
        DataType = ftUnknown
        Name = 'azs_inst'
      end
      item
        DataType = ftUnknown
        Name = 'org_id'
      end
      item
        DataType = ftUnknown
        Name = 'org_inst'
      end>
  end
  object qSaleDet: TOilQuery
    SQL.Strings = (
      
        'insert into oil_sale_book_det /*sozdanie det dlia NN s AZS vedom' +
        'ost*/'
      '  (id,'
      '   state,'
      '   inst,'
      '   nn_id,'
      '   nn_inst,'
      '   nds_t,'
      '   nds_p_20,'
      '   nds_p_base,'
      '   nds_np_20,'
      '   nds_np_base,'
      '   tov_id, '
      '   div_id,'
      '   kol,'
      '   det_date,'
      '   price_nds)'
      '   select s_oil_sale_book_det.nextval,j.*'
      '   from('
      '  select a.State state,'
      '         a.inst inst,'
      '         a.nn_id nn_id,'
      '         a.nn_inst nn_inst,'
      '         sum(a.nds_t) nds_t,'
      
        '         sum(decode(a.nal_num, null, null, a.nds_base))nds_p_bas' +
        'e,'
      '         sum(decode(a.nal_num, null, null, a.nds_20))nds_p_20,'
      
        '         sum(decode(a.nal_num, null, a.nds_base, null))nds_np_ba' +
        'se,'
      '         sum(decode(a.nal_num, null, a.nds_20, null))nds_np_20,'
      '         a.tov_id tov_id,'
      '         a.div_id div_id,'
      '         sum(a.count_)count_,'
      '         trunc(a.det_date) det_date,'
      '         round(a.nds_t/a.count_, 2)prise_nds'
      '    from (select '#39'Y'#39' as state,'
      '                 nakl_inst as inst,'
      '                 nakl_id nn_id,'
      '                 nakl_inst as nn_inst,'
      '                 summ as nds_t,'
      '                 round(summ - sum_20, 4) as nds_base,'
      '                 round(sum_20, 2) as nds_20,'
      '                 np_id as tov_id,'
      '                 28 as div_id,'
      '                 quantity as count_,'
      '                 string_date as det_date,'
      '                 nal_num'
      '            from (select sb.id as nakl_id,'
      '                         sb.inst as nakl_inst,'
      '                         sb.num as nakl_num,'
      '                         oil_org.nal_num nal_num,'
      '                         oil_daily_rep.rep_date as string_date,'
      '                         oil_np_type.name as np_name,'
      '                         oil_np_type.id as np_id,'
      '                         '#39#1083#39' as np_dim,'
      '                         oil_vedomost.litr as quantity,'
      
        '                         Nds.GetNoNds_WithNds(oil_vedomost.price' +
        ','
      '                           oil_daily_rep.rep_date) as p_vnds,'
      '                         oil_vedomost.amount as summ,'
      '                         oil_vedomost.amount -'
      '                         round(oil_vedomost.amount *'
      
        '                           NDS.TAX_RATE(oil_rashod.date_) /(1 + ' +
        'NDS.TAX_RATE(oil_rashod.date_)),'
      '                           2) as sum_20'
      '                    from v_oil_sale_book_base sb,'
      '                         oil_daily_rep,'
      '                         oil_np_type,'
      '                         oil_vedomost,'
      '                         oil_dr_data drd,'
      '                         oil_rashod,'
      '                         oil_part,'
      '                         v_org oil_org'
      '                   where sb.nn_cause_id = 11 and'
      '                         oil_daily_rep.state = '#39'Y'#39' and'
      
        '                         trunc(oil_daily_rep.rep_date) >=  sb.fr' +
        'om_date and'
      
        '                         trunc(oil_daily_rep.rep_date) <=  sb.to' +
        'date and'
      '                         oil_daily_rep.azs_id = sb.azs_id and'
      
        '                         oil_daily_rep.azs_inst = sb.azs_inst an' +
        'd'
      
        '                         drd.state = '#39'Y'#39' and oil_daily_rep.id = ' +
        'drd.rep_id and'
      '                         oil_daily_rep.inst = drd.rep_inst and'
      '                         oil_vedomost.srep_id = drd.id and'
      '                         oil_vedomost.srep_inst = drd.inst and'
      '                         oil_vedomost.org_id = sb.organ and'
      
        '                         oil_vedomost.org_inst = sb.organ_inst a' +
        'nd'
      
        '                         oil_vedomost.state = '#39'Y'#39' and oil_rashod' +
        '.state = '#39'Y'#39' and'
      '                         oil_rashod.id = drd.ttn_id and'
      '                         oil_rashod.inst = drd.ttn_inst and'
      '                         oil_part.state = '#39'Y'#39' and'
      '                         oil_part.id = oil_rashod.part_id and'
      
        '                         oil_part.inst = oil_rashod.part_inst an' +
        'd'
      '                         oil_np_type.id = oil_part.np_type and'
      '                         oil_org.id = sb.Organ and'
      '                         oil_org.inst = sb.Organ_Inst'
      '                     and sb.inst = ov.GetVal('#39'INST'#39') '
      '                         ) azs'
      '           where (azs.nakl_id,azs.nakl_inst) in'
      '                 (Select id,'
      '                         inst'
      '                    from V_OIL_SALE_BOOK_BASE sb'
      '                   where num is null'
      
        '                     and from_date between trunc(:from_date,'#39'mon' +
        #39') and :todate'
      
        '                     and todate between trunc(:from_date,'#39'mon'#39') ' +
        'and :todate'
      '                     and nn_cause_id = 11'
      '                     and inst = ov.GetVal('#39'INST'#39'))'
      '                                                 ) a'
      'group by a.State,'
      '         a.inst,'
      '         a.nn_id,'
      '         a.nn_inst,'
      '         a.tov_id,'
      '         a.div_id,'
      '         a.det_date,'
      '         round(a.nds_t/a.count_, 2))j'
      ' ')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 392
    Top = 40
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftUnknown
        Name = 'todate'
      end>
  end
  object qBankSr: TOilQuery
    SQL.Strings = (
      'select bce.*,'
      '       trunc(bce.rep_date) trunc_rep_date'
      '  from v_bank_card_equal bce'
      ' where trunc(bce.rep_date) between :DateBegin and :DateEnd'
      
        '   and ((bce.azs_id=:azs_id and bce.azs_id=:azs_inst)or(:azs_id=' +
        '-1 and :azs_inst=-1))'
      ' order by trunc(bce.rep_date)')
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 273
    Top = 184
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'DateBegin'
        ParamType = ptInput
      end
      item
        DataType = ftDateTime
        Name = 'DateEnd'
        ParamType = ptInput
      end
      item
        DataType = ftUnknown
        Name = 'azs_id'
      end
      item
        DataType = ftUnknown
        Name = 'azs_inst'
      end>
  end
  object qBankCheck: TOilQuery
    SQL.Strings = (
      'select trunc(bcc.begin_date) trunc_begin_date,'
      '       trunc(bcc.end_date) trunc_end_date,'
      '       azs_id,azs_inst,'
      '       min(delta)min_delta,'
      '       max(delta)max_delta'
      '  from v_bank_card_check bcc'
      ' where (trunc(bcc.begin_date) between :DateBegin and :DateEnd'
      '    or  trunc(bcc.end_date) between :DateBegin and :DateEnd)'
      
        '   and ((azs_id=:azs_id and azs_inst=:azs_inst)or(:azs_id=-1 and' +
        ' :azs_inst=-1))'
      
        ' group by trunc(bcc.begin_date),trunc(bcc.end_date),azs_id,azs_i' +
        'nst')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 321
    Top = 184
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'DateBegin'
      end
      item
        DataType = ftDateTime
        Name = 'DateEnd'
      end
      item
        DataType = ftUnknown
        Name = 'azs_id'
      end
      item
        DataType = ftUnknown
        Name = 'azs_inst'
      end>
  end
  object qHelper_: TOilQuery
    SQL.Strings = (
      'select sbook_creator.from_date_will will_from_date,'
      '       sbook_creator.to_date_will will_to_date,'
      '       sbook_creator.from_date_was was_from_date,'
      '       sbook_creator.to_date_was was_to_date,'
      '       sbook_creator.org_id,'
      '       sbook_creator.org_inst,'
      '       azs.name azs_name,'
      '       client.name client_name'
      '  from (select ve.org_id,'
      '               ve.org_inst,'
      '               dr.azs_id,'
      '               dr.azs_inst,'
      '               nvl(sb.from_date,'
      '                 to_date(to_char(trunc(:from_date,'
      
        '                   '#39'mon'#39'),'#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39')) from_date_wil' +
        'l,'
      
        '               to_date(to_char(:todate,'#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39') t' +
        'o_date_will,'
      '               to_date(null)from_date_was,'
      '               to_date(null)to_date_was'
      '          from oil_srother ve,'
      '               oil_dr_data drd,'
      '               oil_daily_rep dr,'
      '               (select organ,'
      '                       organ_inst,'
      
        '                       nvl((max(todate) + 1),to_date(null)) from' +
        '_date'
      '                  from v_oil_sale_book sb'
      '                 where (sb.nn_Cause_id = :cause)'
      
        '                   and ((sb.todate between :from_date and :todat' +
        'e) or'
      '                        (sb.from_date between'
      '                           to_date(to_char(trunc(:from_date,'
      
        '                             '#39'mon'#39'),'#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39') and ' +
        ':todate))'
      
        '                   and sb.from_=:from_id and sb.from_inst=:from_' +
        'inst'
      '                 group by organ,'
      '                          organ_inst) sb'
      '         where ve.srep_id = drd.id and ve.srep_inst = drd.inst'
      '           and drd.rep_id = dr.id and drd.rep_inst = dr.inst'
      
        '           and drd.state = '#39'Y'#39' and ve.state = '#39'Y'#39' and dr.state =' +
        ' '#39'Y'#39
      
        '           and sb.organ(+) = ve.org_id and sb.organ_inst(+) = ve' +
        '.org_inst'
      
        '           and trunc(dr.rep_date) >= nvl(sb.from_date, to_date(t' +
        'o_char(trunc(:from_date,'
      '             '#39'mon'#39'),'#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39'))'
      '           and trunc(dr.rep_date) <= :todate'
      
        '           and ((dr.azs_id = :azs_id and dr.azs_inst = :azs_inst' +
        ') or'
      '               (:azs_id = -1 and :azs_inst = -1 and'
      '               (dr.azs_id, dr.azs_inst) in'
      '               (select o.id,'
      '                       o.inst'
      '                  from v_org o'
      
        '                 where id = inst and par = :From_id and par_inst' +
        ' = :From_inst and Org_type = 8))) and'
      
        '               ((ve.org_id = :org_id and ve.org_inst = :org_inst' +
        ') or'
      '               (:org_id = -1 and :org_inst = -1))'
      '               %s/*39-oper_num*/'
      '         union all'
      '        select nvl(sb.organ,to_number(null)),'
      '               nvl(sb.organ_inst,to_number(null)),'
      '               nvl(sb.azs_id,to_number(null)),'
      '               nvl(sb.azs_inst,to_number(null)),'
      '               to_date(null)from_date_will,'
      '               to_date(null)to_date_will,'
      
        '               nvl(Min(sb.from_date),to_date(null)) from_date_wa' +
        's,'
      '               nvl(Max(sb.todate),to_date(null)) to_date_was'
      '          from v_oil_sale_book sb'
      '         where (sb.nn_Cause_id = :cause)'
      '           and ((sb.todate between :from_date and :todate) or'
      
        '                (sb.from_date between to_date(to_char(trunc(:fro' +
        'm_date,'
      '                  '#39'mon'#39'),'#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39')'
      '                                  and to_date(to_char(:todate,'
      '                  '#39'ddmmyyyy'#39'),'#39'ddmmyyyy'#39')))'
      '           and sb.from_=:from_id and sb.from_inst=:from_inst'
      '         group by organ,'
      '                  organ_inst,'
      '                  azs_id,'
      '                  azs_inst)sbook_creator,'
      '       v_org azs,'
      '       v_org Client'
      
        ' where sbook_creator.org_id = client.id and sbook_creator.org_in' +
        'st = client.inst'
      
        '   and sbook_creator.azs_id = azs.id and sbook_creator.azs_inst ' +
        '= azs.inst'
      
        '   and azs.org_type = 8 and azs.par = :from_id and azs.par_inst ' +
        '= :from_inst'
      
        '   and ((azs.id = :azs_id and azs.inst = :azs_inst)or(:azs_id = ' +
        '-1 and :azs_inst = -1))'
      
        '   and ((client.id = :org_id and client.inst = :org_inst) or (:o' +
        'rg_id = -1 and :org_inst = -1))'
      ' group by sbook_creator.from_date_will ,'
      '       sbook_creator.to_date_will ,'
      '       sbook_creator.from_date_was ,'
      '       sbook_creator.to_date_was ,'
      '       sbook_creator.org_id,'
      '       sbook_creator.org_inst,'
      '       azs.name ,'
      '       client.name')
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 152
    Top = 96
    ParamData = <
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftDateTime
        Name = 'todate'
      end
      item
        DataType = ftUnknown
        Name = 'cause'
      end
      item
        DataType = ftInteger
        Name = 'From_id'
      end
      item
        DataType = ftInteger
        Name = 'From_inst'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftInteger
        Name = 'azs_inst'
      end
      item
        DataType = ftInteger
        Name = 'org_id'
      end
      item
        DataType = ftInteger
        Name = 'org_inst'
      end>
  end
  object qInsert_: TOilQuery
    SQL.Strings = (
      'insert into oil_sale_book'
      '('
      '  id,'
      '  inst,'
      '  state,'
      '  s_date,'
      '  r_date,'
      '  from_,'
      '  from_inst,'
      '  organ,'
      '  organ_inst,'
      '  sale_txt,'
      '  azs_id,'
      '  azs_inst,'
      '  frasch,'
      '  nn_type_id,'
      '  nn_cause_id'
      '  )'
      'select'
      ' s_oil_sale_book.nextval,'
      ' a,b,c1,c2,d,e,f,g,'
      '/* h||'#39';'#39'||i, */'
      ' to_char(h,'#39'DD.MM.YYYY'#39')||'#39';'#39'||to_char(i,'#39'DD.MM.YYYY'#39'),'
      ' j,k,'#39#1054#1087#1083#1072#1090#1072' '#1089' '#1088'/'#1089#39',2,:cause'
      'from'
      '  ('
      '   select distinct'
      '      dr.inst as a,'
      '      '#39'Y'#39' as b,'
      '       trunc(:sdate) as c1,'
      '       trunc(:sdate) as c2,'
      '       :from_id as d,'
      '       :from_inst as e,'
      '       ve.org_id as f,'
      '       ve.org_inst as g,'
      '       nvl(sb.from_date,trunc(:from_date,'#39'mon'#39')) as h,'
      '       :todate as i,'
      '       dr.azs_id as j,'
      '       dr.azs_inst as k'
      '   from'
      '      oil_srother ve,'
      '      oil_dr_data drd,'
      '      oil_daily_rep dr,'
      '      (select organ,'
      '              organ_inst,'
      '              (nvl(max(todate),to_date(null))+1)from_date'
      '         from v_oil_sale_book'
      '        where nn_Cause_id = nvl(:cause,12)'
      
        '          and (nvl(todate,to_date(null)) between :from_date and ' +
        ':todate or'
      
        '              nvl(from_date,to_date(null)) between trunc(:from_d' +
        'ate,'#39'mon'#39')and :todate)'
      '        group by organ,organ_inst)sb'
      '  where'
      '      ve.srep_id = drd.id and'
      '      ve.srep_inst = drd.inst and'
      '      drd.rep_id = dr.id and'
      '      drd.rep_inst = dr.inst and'
      '      drd.state = '#39'Y'#39' and'
      '      ve.state = '#39'Y'#39' and'
      '      dr.state = '#39'Y'#39' and'
      '      sb.organ(+) = ve.org_id and'
      '      sb.organ_inst(+) = ve.org_inst and'
      
        '      trunc(dr.rep_date) >= nvl(sb.from_date,trunc(:from_date,'#39'm' +
        'on'#39')) and'
      '      trunc(dr.rep_date) <= :todate and'
      '      (( dr.azs_id = :azs_id and dr.azs_inst = :azs_inst ) or'
      '      (:azs_id = -1 and :azs_inst = -1'
      '          and (dr.azs_id,dr.azs_inst) in'
      '             (select o.id,o.inst'
      '                from v_org o'
      '               where id = inst'
      '                 and par = :from_id'
      '                 and par_inst = :from_inst'
      '                 and Org_type = 8)'
      '        )'
      '      ) and'
      '      ((ve.org_id = :org_id and ve.org_inst = :org_inst) or'
      '      (:org_id = -1 and :org_inst = -1)'
      '      )'
      '%s/*74-OPER_NUM*/'
      ')')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 192
    Top = 96
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'cause'
      end
      item
        DataType = ftDateTime
        Name = 'sdate'
      end
      item
        DataType = ftInteger
        Name = 'from_id'
      end
      item
        DataType = ftInteger
        Name = 'from_inst'
      end
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftDateTime
        Name = 'todate'
      end
      item
        DataType = ftInteger
        Name = 'azs_id'
      end
      item
        DataType = ftInteger
        Name = 'azs_inst'
      end
      item
        DataType = ftInteger
        Name = 'org_id'
      end
      item
        DataType = ftInteger
        Name = 'org_inst'
      end>
  end
  object qSaleDet_: TOilQuery
    SQL.Strings = (
      
        'insert into oil_sale_book_det /*sozdanie det dlia NN s AZS proch' +
        'ij otpysk*/'
      '  (id,'
      '   state,'
      '   inst,'
      '   nn_id,'
      '   nn_inst,'
      '   nds_t,'
      '   nds_p_20,'
      '   nds_p_base,'
      '   nds_np_20,'
      '   nds_np_base,'
      '   tov_id,'
      '   div_id,'
      '   kol,'
      '   det_date,'
      '   price_nds)'
      '  select s_oil_sale_book_det.nextval, j.*'
      '    from (select '#39'Y'#39' state, '
      '                 inst,'
      #9#9'nn_id,nn_inst, '
      #9#9'summ, '
      #9#9'is_pn*summnds, is_pn*summxnds,'
      #9#9'is_not_pn*summnds, is_not_pn*summxnds,'
      #9#9'tov_id,div_id,count_,det_date,price'
      '             from (select a.inst, a.nn_id, a.nn_inst, '
      
        '                           decode(a.nal_num, null, null, 1) as i' +
        's_pn,'
      
        '                           decode(a.nal_num, null, 1, null) as i' +
        's_not_pn,'
      '                           a.tov_id, a.div_id,'
      
        '                           decode(:cause,23,NDS.GetWithNDS_NoNDS' +
        '(round(sum(a.ss * a.tonn),2),sysdate),sum(a.summnds))summ,  '#9#9#9#9 +
        #9#9#9#9#9#9#9#9#9' '
      
        '                           decode(:cause,23,sum(a.tonn),sum(a.co' +
        'unt_))count_, '
      
        '                           decode(:cause,23,round(sum(a.ss * a.t' +
        'onn),2),sum(a.summxnds))summxnds, '#9
      
        '                           decode(:cause,23,NDS.GetNDS_NoNDS(rou' +
        'nd(sum(a.ss * a.tonn),2),sysdate),NDS.GetNDS_NoNDS(sum(a.summnds' +
        '),sysdate)) summnds,'
      
        '                           /*sum(a.summnds)-decode(:cause,23,NDS' +
        '.GetNDS_NoNDS(sum(a.ss * a.tonn),sysdate),sum(a.summxnds))summnd' +
        's,*/'
      '                           trunc(a.det_date)det_date, '
      
        '                           NDS.GetWithNDS_NoNDS(decode(:cause,23' +
        ',ss,price, 2),sysdate)price'
      '                      from (select distinct  nakl_inst as inst,'
      
        '                                             nakl_id nn_id, nakl' +
        '_inst as nn_inst,'
      
        '                                             NDS.GetWithNDS_NoND' +
        'S(decode(:cause,23,summxtonn,summxlitr),sysdate) as summnds,'
      
        '                                             round(decode(:cause' +
        ',23,summxtonn,summxlitr), 2) as summxnds,'
      
        '                                             np_id as tov_id, di' +
        'm_id as div_id,'
      '                                             quantity as count_,'
      
        '                                             string_date as det_' +
        'date, nal_num,'
      '                                             tonn, '
      '                                             ss,'
      '                                             price'
      
        '                               from (select sb.id as nakl_id, sb' +
        '.inst as nakl_inst,'
      '                                             sb.num as nakl_num,'
      
        '                                             oil_org.nal_num nal' +
        '_num,'
      
        '                                             oil_daily_rep.rep_d' +
        'ate as string_date,'
      
        '                                             oil_np_type.name as' +
        ' np_name,'
      
        '                                             oil_np_type.id as n' +
        'p_id,'
      '                                             oil_part.dim_id,'
      
        '                                             oil_srother.litr as' +
        ' quantity,'
      
        '                                             round(oil_srother.l' +
        'itr *'
      
        '                                                    oil_srother.' +
        'price,'
      
        '                                                    2) as summxl' +
        'itr,'
      
        '                                             round(oil_srother.c' +
        'ount_t *'
      '                                                   oil_part.ss,'
      
        '                                                    2) as summxt' +
        'onn,'
      
        '                                             oil_srother.count_t' +
        ' tonn, '
      '                                             oil_part.ss,'
      '                                             oil_srother.price'
      
        '                                        from V_OIL_SALE_BOOK sb,' +
        ' oil_daily_rep,'
      
        '                                             oil_np_type, oil_sr' +
        'other,'
      
        '                                             oil_dr_data drd, oi' +
        'l_part, oil_rashod,'
      '                                             v_org oil_org'
      
        '                                       where sb.Nn_Cause_Id = :c' +
        'ause'
      
        '                                         and oil_daily_rep.state' +
        ' = '#39'Y'#39
      
        '                                         and trunc(oil_daily_rep' +
        '.rep_date) >='
      '                                             sb.from_date'
      
        '                                         and trunc(oil_daily_rep' +
        '.rep_date) <='
      '                                             sb.todate'
      
        '                                         and oil_daily_rep.azs_i' +
        'd = sb.azs_id'
      
        '                                         and oil_daily_rep.azs_i' +
        'nst = sb.azs_inst'
      
        '                                         and oil_daily_rep.id = ' +
        'drd.rep_id'
      
        '                                         and oil_daily_rep.inst ' +
        '= drd.rep_inst'
      
        '                                         and oil_srother.srep_id' +
        ' = drd.id'
      
        '                                         and oil_srother.srep_in' +
        'st = drd.inst'
      
        '                                         and oil_srother.org_id ' +
        '= sb.ORGAN'
      
        '                                         and oil_srother.org_ins' +
        't = sb.ORGAN_inst'
      
        '                                         and oil_srother.state =' +
        ' '#39'Y'#39
      
        '                                         and oil_rashod.id = drd' +
        '.ttn_id'
      
        '                                         and oil_rashod.inst = d' +
        'rd.ttn_inst'
      
        '                                         and oil_part.id = oil_r' +
        'ashod.part_id'
      
        '                                         and oil_part.inst = oil' +
        '_rashod.PART_INST'
      
        '                                         and oil_np_type.id = oi' +
        'l_part.np_type'
      
        '                                         and oil_org.id = sb.Org' +
        'an'
      
        '                                         and oil_org.inst = sb.O' +
        'rgan_Inst'
      '                                         %s/*92-OPER_NUM*/'
      '                                      ) azs'
      
        '                              where (azs.nakl_id, azs.nakl_inst)' +
        ' in'
      '                                    (Select id, inst'
      '                                       from V_OIL_SALE_BOOK sb'
      '                                      where num is null'
      
        '                                        and nvl(sb.from_date, to' +
        '_date(null)) between'
      
        '                                            trunc(:from_date, '#39'm' +
        'on'#39') and :todate'
      
        '                                        and nvl(sb.todate, to_da' +
        'te(null)) between'
      
        '                                            trunc(:from_date, '#39'm' +
        'on'#39') and :todate'
      
        '                                        and Nn_Cause_Id = :cause' +
        ')) a'
      
        '                     group by a.inst, a.nn_id, a.nn_inst, a.tov_' +
        'id,'
      
        '                              a.div_id, a.det_date, a.nal_num,ss' +
        ',price) j) j')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 232
    Top = 96
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'cause'
      end
      item
        DataType = ftDateTime
        Name = 'from_date'
      end
      item
        DataType = ftDateTime
        Name = 'todate'
      end>
  end
  object qAccountPayable: TOilQuery
    SQL.Strings = (
      'select dep_id as from_id,'
      '       dep_inst as from_inst,'
      '       dep_name as from_name,'
      '       org_id as client_id,'
      '       org_inst as client_inst,'
      '       org_name as client_name,'
      '       abs(sum(total)) as sum_nds'
      '  from v_oil_debitorka'
      
        ' where ((dep_id = :from_id and dep_inst = :from_inst) or (:from_' +
        'id = -1 and :from_inst = -1))'
      
        '   and ((org_id = :org_id and org_inst = :org_inst) or (:org_id ' +
        '= -1 and :org_inst = -1))'
      '   and deb_date <= :sdate'
      '   and deb_inside = '#39'N'#39
      '   and not exists (select *'
      '          from oil_sale_book sb'
      '         where sb.state = '#39'Y'#39
      '           and sb.nn_cause_id = 25'
      '           and sb.s_date = :sdate'
      '           and sb.organ = org_id'
      '           and sb.organ_inst = org_inst)'
      ' group by dep_id,'
      '          dep_par_id,'
      '          dep_inst,'
      '          dep_name,'
      '          org_id,'
      '          org_inst,'
      '          org_name,'
      '          org_type'
      'having sum(total) < 0'
      ' order by dep_name')
    FetchAll = True
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 416
    Top = 176
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'from_id'
      end
      item
        DataType = ftUnknown
        Name = 'from_inst'
      end
      item
        DataType = ftUnknown
        Name = 'org_id'
      end
      item
        DataType = ftUnknown
        Name = 'org_inst'
      end
      item
        DataType = ftUnknown
        Name = 'sdate'
      end>
  end
  object qTestDog: TOilQuery
    SQL.Strings = (
      'select count(*) as cnt'
      '  from oil_dog'
      ' where state = '#39'Y'#39
      '   and dog_type = '#39'V'#39
      '   and to_ = :to_id'
      '   and to_inst = :to_inst'
      '   and dog_date <= :end_date')
    RequestLive = False
    UpdateMode = upWhereAll
    Left = 431
    Top = 43
    ParamData = <
      item
        DataType = ftUnknown
        Name = 'to_id'
      end
      item
        DataType = ftUnknown
        Name = 'to_inst'
      end
      item
        DataType = ftUnknown
        Name = 'end_date'
      end>
  end
end
